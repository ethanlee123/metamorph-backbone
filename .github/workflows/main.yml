# This is a basic workflow to help you get started with Actions

name: Deploy to Raspberry PI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # # This workflow contains a single job called "build"
  # build:
  #   # The type of runner that the job will run on
  #   runs-on: self-hosted

  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v3

  #     # Runs a single command using the runners shell
  #     - name: Run a one-line script
  #       run: echo Hello, world!

  #     # Runs a set of commands using the runners shell
  #     - name: Run a multi-line script
  #       run: |
  #         echo Add other actions to build,
  #         echo test, and deploy your project.

  deploy:
    runs-on: self-hosted
    # used to define a variation of environments in which we run the job
    strategy: 
            matrix:
                node-version: [18.x]

    steps:
      # Work around for actions/checkout@v2 error: https://github.com/actions/checkout/issues/590
      - name: Potential broken submodules fix
        run: |
          git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :
      
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}

        # Setup the hosting environment with the node version of our choice (if we have NodeJS install in the node env, this is not mandatory)
        uses: actions/setup-node@v1
        with:
            node-version: ${{ matrix.node-version }}

        - run: npm install
        - run: npm run build --if-present
        - run: npm test
